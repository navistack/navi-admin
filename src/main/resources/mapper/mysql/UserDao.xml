<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.navistack.admin.modules.common.dao.UserDao">
    <select id="select" resultType="org.navistack.admin.modules.common.entity.User">
        SELECT *
          FROM user
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="nickName != null and !nickName.isEmpty()">AND nick_name LIKE #{nickName} '%'</if>
            <if test="loginName != null and !loginName.isEmpty()">AND login_name = #{loginName}</if>
            <if test="mobileNumber != null and !mobileNumber.isEmpty()">AND mobile_number = #{mobileNumber}</if>
            <if test="emailAddress != null and !emailAddress.isEmpty()">AND email_address = #{emailAddress}</if>
            <if test="status != null">AND status = #{status}</if>
        </where>
    </select>

    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM user
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="nickName != null and !nickName.isEmpty()">AND nick_name LIKE #{nickName} '%'</if>
            <if test="loginName != null and !loginName.isEmpty()">AND login_name = #{loginName}</if>
            <if test="mobileNumber != null and !mobileNumber.isEmpty()">AND mobile_number = #{mobileNumber}</if>
            <if test="emailAddress != null and !emailAddress.isEmpty()">AND email_address = #{emailAddress}</if>
            <if test="status != null">AND status = #{status}</if>
        </where>
    </select>

    <select id="selectWithPageable" resultType="org.navistack.admin.modules.common.entity.User">
        SELECT *
          FROM user
        <where>
            <if test="query.id != null">AND id = #{query.id}</if>
            <if test="query.nickName != null and !query.nickName.isEmpty()">AND nick_name LIKE #{query.nickName} '%'</if>
            <if test="query.loginName != null and !query.loginName.isEmpty()">AND login_name = #{query.loginName}</if>
            <if test="query.mobileNumber != null and !query.mobileNumber.isEmpty()">AND mobile_number = #{query.mobileNumber}</if>
            <if test="query.emailAddress != null and !query.emailAddress.isEmpty()">AND email_address = #{query.emailAddress}</if>
            <if test="query.status != null">AND status = #{query.status}</if>
        </where>
        <if test="pageable != null">
            <trim prefix="ORDER BY" suffixOverrides=",">
                <if test="pageable.sort != null and pageable.sort.orders != null and !pageable.sort.orders.isEmpty()">
                    <foreach item="order" collection="pageable.sort.orders" separator=",">
                        <choose>
                            <otherwise>id</otherwise>
                        </choose>
                        <choose>
                            <when test="order.ascending">ASC</when>
                            <otherwise>DESC</otherwise>
                        </choose>
                    </foreach>
                </if>
            </trim>
            <trim prefix="LIMIT">
                #{pageable.pageSize}
            </trim>
            <trim prefix="OFFSET">
                #{pageable.offset}
            </trim>
        </if>
    </select>

    <select id="selectOne" resultType="org.navistack.admin.modules.common.entity.User">
        SELECT *
        FROM user
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="nickName != null and !nickName.isEmpty()">AND nick_name LIKE #{nickName} '%'</if>
            <if test="loginName != null and !loginName.isEmpty()">AND login_name = #{loginName}</if>
            <if test="mobileNumber != null and !mobileNumber.isEmpty()">AND mobile_number = #{mobileNumber}</if>
            <if test="emailAddress != null and !emailAddress.isEmpty()">AND email_address = #{emailAddress}</if>
            <if test="status != null">AND status = #{status}</if>
        </where>
    </select>

    <select id="selectOneByLoginName" resultType="org.navistack.admin.modules.common.entity.User">
        SELECT *
          FROM user
         WHERE login_name = #{loginName}
            OR mobile_number = #{mobileNumber}
            OR email_address = #{emailAddress}
    </select>

    <select id="selectOneById" resultType="org.navistack.admin.modules.common.entity.User">
        SELECT *
          FROM user
         WHERE id = #{id}
    </select>

    <insert id="insert">
        INSERT INTO user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="nickName != null">nick_name,</if>
            <if test="avatarUrl != null">avatar_url,</if>
            <if test="gender != null">gender,</if>
            <if test="birthday != null">birthday,</if>
            <if test="loginName != null">login_name,</if>
            <if test="mobileNumber != null">mobile_number,</if>
            <if test="emailAddress != null">email_address,</if>
            <if test="password != null">password,</if>
            <if test="status != null">status,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="createdBy != null">created_by,</if>
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="nickName != null">#{nickName},</if>
            <if test="avatarUrl != null">#{avatarUrl},</if>
            <if test="gender != null">#{gender},</if>
            <if test="birthday != null">#{birthday},</if>
            <if test="loginName != null">#{loginName},</if>
            <if test="mobileNumber != null">#{mobileNumber},</if>
            <if test="emailAddress != null">#{emailAddress},</if>
            <if test="password != null">#{password},</if>
            <if test="status != null">#{status},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="createdBy != null">#{createdBy},</if>
        </trim>
    </insert>

    <update id="updateById">
        UPDATE user
        <set>
            <if test="nickName != null">nick_name = #{nickName},</if>
            <if test="avatarUrl != null">avatar_url = #{avatarUrl},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="birthday != null">birthday = #{birthday},</if>
            <if test="loginName != null">login_name = #{loginName},</if>
            <if test="mobileNumber != null">mobile_number = #{mobileNumber},</if>
            <if test="emailAddress != null">email_address = #{emailAddress},</if>
            <if test="password != null">password = #{password},</if>
            <if test="status != null">status = #{status},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
            <if test="updatedBy != null">#{updatedBy},</if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="deleteById">
        DELETE
          FROM user
         WHERE id = #{id}
    </delete>
</mapper>
