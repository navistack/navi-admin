<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.navistack.admin.modules.identity.dao.RolePrivilegeDao">
    <select id="selectAllByQuery" resultType="org.navistack.admin.modules.identity.entity.RolePrivilege">
        SELECT *
          FROM role_privilege
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="roleId != null">AND role_id = #{roleId}</if>
            <if test="privilegeId != null">AND privilege_id = #{privilegeId}</if>
        </where>
    </select>

    <select id="selectAllByRoleIds" resultType="org.navistack.admin.modules.identity.entity.RolePrivilege">
        SELECT *
          FROM role_privilege
        <where>
            <choose>
                <when test="roleIds != null and !roleIds.isEmpty()">
                    role_id IN
                    <foreach item="roleId" collection="roleIds" open="(" separator="," close=")">
                        #{roleId}
                    </foreach>
                </when>
                <otherwise>1 = 0</otherwise>
            </choose>
        </where>
    </select>

    <select id="existsByQuery" resultType="java.lang.Boolean">
        SELECT EXISTS(
            SELECT *
              FROM role_privilege
            <where>
                <if test="id != null">AND id = #{id}</if>
                <if test="roleId != null">AND role_id = #{roleId}</if>
                <if test="privilegeId != null">AND privilege_id = #{privilegeId}</if>
            </where>
        )
    </select>

    <select id="countByQuery" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM role_privilege
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="roleId != null">AND role_id = #{roleId}</if>
            <if test="privilegeId != null">AND privilege_id = #{privilegeId}</if>
        </where>
    </select>

    <select id="paginateByQuery" resultType="org.navistack.admin.modules.identity.entity.RolePrivilege">
        SELECT *
          FROM role_privilege
        <where>
            <if test="query.id != null">AND id = #{query.id}</if>
            <if test="query.roleId != null">AND role_id = #{query.roleId}</if>
            <if test="query.privilegeId != null">AND privilege_id = #{query.privilegeId}</if>
        </where>
        <if test="pageable != null">
            <trim prefix="ORDER BY" suffixOverrides=",">
                <if test="pageable.sort != null and pageable.sort.orders != null and !pageable.sort.orders.isEmpty()">
                    <foreach item="order" collection="pageable.sort.orders" separator=",">
                        <choose>
                            <when test="order.property == 'roleId'">role_id</when>
                            <when test="order.property == 'privilegeId'">privilege_id</when>
                            <otherwise>id</otherwise>
                        </choose>
                        <choose>
                            <when test="order.ascending">ASC</when>
                            <otherwise>DESC</otherwise>
                        </choose>
                    </foreach>
                </if>
            </trim>
            <trim prefix="LIMIT">
                #{pageable.pageSize}
            </trim>
            <trim prefix="OFFSET">
                #{pageable.offset}
            </trim>
        </if>
    </select>

    <select id="selectByQuery" resultType="org.navistack.admin.modules.identity.entity.RolePrivilege">
        SELECT *
        FROM role_privilege
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="roleId != null">AND role_id = #{roleId}</if>
            <if test="privilegeId != null">AND privilege_id = #{privilegeId}</if>
        </where>
    </select>

    <select id="selectById" resultType="org.navistack.admin.modules.identity.entity.RolePrivilege">
        SELECT *
          FROM role_privilege
         WHERE id = #{id}
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO role_privilege
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="roleId != null">role_id,</if>
            <if test="privilegeId != null">privilege_id,</if>
            <if test="createdAt != null">created_at,</if>
            <if test="createdBy != null">created_by,</if>
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="roleId != null">#{roleId},</if>
            <if test="privilegeId != null">#{privilegeId},</if>
            <if test="createdAt != null">#{createdAt},</if>
            <if test="createdBy != null">#{createdBy},</if>
        </trim>
    </insert>

    <insert id="insertAll" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO role_privilege
        <trim prefix="(" suffix=")" suffixOverrides=",">
            id,
            role_id,
            privilege_id,
            created_at,
            created_by,
        </trim>
        VALUES
        <foreach item="entity" collection="entities" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{entity.id},
                #{entity.roleId},
                #{entity.privilegeId},
                COALESCE(#{entity.createdAt}, CURRENT_TIMESTAMP),
                #{entity.createdBy},
            </trim>
        </foreach>
    </insert>

    <update id="updateById">
        UPDATE role_privilege
        <set>
            <if test="roleId != null">role_id = #{roleId},</if>
            <if test="privilegeId != null">privilege_id = #{privilegeId},</if>
            <if test="updatedAt != null">#{updatedAt},</if>
            <if test="updatedBy != null">#{updatedBy},</if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>

    <delete id="deleteById">
        DELETE
          FROM role_privilege
         WHERE id = #{id}
    </delete>

    <delete id="deleteAllByQuery">
        DELETE
          FROM role_privilege
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="roleId != null">AND role_id = #{roleId}</if>
            <if test="privilegeId != null">AND privilege_id = #{privilegeId}</if>
        </where>
    </delete>

    <delete id="deleteAllByRoleId">
        DELETE
          FROM role_privilege
         WHERE role_id = #{roleId}
    </delete>
</mapper>
